{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vopro\\\\RiderProjects\\\\Machine\\\\Machine\\\\ClientApp\\\\src\\\\components\\\\FetchData.tsx\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport \"./NavMenu.css\";\nimport { Mapper } from \"../Mapper/Mapper\";\nimport { ProductCategory } from \"../Enum/ProductCategory\";\nimport { Language } from \"../Language/Language\";\nimport { ProductMachine } from \"../Modal/ProductMachine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.state = {\n      products: [],\n      showModal: false,\n      coins: [],\n      product: {\n        id: 0,\n        name: \"\",\n        countProduct: 0,\n        price: 0,\n        description: \"\",\n        category: ProductCategory.food,\n        isRemoved: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n    this.getCoins();\n  }\n\n  async getProducts() {\n    const response = await fetch('getproducts');\n    const request = await response.json();\n    const products = Mapper.mapToProductViews(request);\n    this.setState({\n      products: products\n    });\n  }\n\n  async getProduct(id) {\n    const response = await fetch('getproduct?id=' + id.toString());\n    const request = await response.json();\n    const product = Mapper.mapToProductView(request);\n    this.setState({\n      product: product\n    });\n    this.openModal();\n  }\n\n  async getProductByCategory(category) {\n    const response = await fetch('getproductscategory?category=' + category.toString());\n    const request = await response.json();\n    const products = Mapper.mapToProductViews(request);\n    this.setState({\n      products: products\n    });\n  }\n\n  async getCoins() {\n    const response = await fetch('getcoins');\n    const request = await response.json();\n    const coins = Mapper.mapToCoinViews(request);\n    this.setState({\n      coins: coins\n    });\n  }\n\n  render() {\n    const category = [0, 1, 2];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [category.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => this.getProductByCategory(cat),\n        children: Language.toProductCategory(cat)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-columns\",\n        children: this.state.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: product.id.toString(),\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price\",\n            children: [\"P\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.getProduct(product.id),\n              children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductMachine, {\n        hide: () => this.closeModal(),\n        coins: this.state.coins,\n        isShown: this.state.showModal,\n        product: this.state.product,\n        getProducts: () => this.getProducts(),\n        getCoins: () => this.getCoins()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vopro/RiderProjects/Machine/Machine/ClientApp/src/components/FetchData.tsx"],"names":["React","Component","Mapper","ProductCategory","Language","ProductMachine","FetchData","constructor","props","openModal","setState","showModal","closeModal","state","products","coins","product","id","name","countProduct","price","description","category","food","isRemoved","componentDidMount","getProducts","getCoins","response","fetch","request","json","mapToProductViews","getProduct","toString","mapToProductView","getProductByCategory","mapToCoinViews","render","map","cat","toProductCategory"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {Component} from 'react';\r\nimport \"./NavMenu.css\"\r\nimport {Mapper} from \"../Mapper/Mapper\";\r\nimport {ProductView} from \"../ViewModel/productView\";\r\nimport {ProductCategory} from \"../Enum/ProductCategory\";\r\nimport {Language} from \"../Language/Language\";\r\nimport {CoinView} from \"../ViewModel/coinView\";\r\nimport {ProductMachine} from \"../Modal/ProductMachine\";\r\n\r\ntype Props ={}\r\n\r\ntype State = {\r\n  products: ProductView[],\r\n  product: ProductView,\r\n  showModal: boolean,\r\n  coins: CoinView[]\r\n}\r\n\r\nexport class FetchData extends Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    \r\n    this.state ={\r\n      products: [],\r\n      showModal: false,\r\n      coins: [],\r\n      product:{\r\n        id: 0,\r\n        name: \"\",\r\n        countProduct: 0,\r\n        price: 0,\r\n        description: \"\",\r\n        category: ProductCategory.food,\r\n        isRemoved: false\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getProducts();\r\n    this.getCoins();\r\n  }\r\n\r\n  async getProducts(){\r\n    const response = await fetch('getproducts');\r\n    const request = await response.json();\r\n    const products = Mapper.mapToProductViews(request)\r\n    this.setState({products: products})\r\n  }\r\n\r\n  async getProduct(id: number){\r\n    const response = await fetch('getproduct?id='+ id.toString());\r\n    const request = await response.json();\r\n    const product = Mapper.mapToProductView(request)\r\n    this.setState({product: product})\r\n    this.openModal();\r\n  }\r\n  \r\n  async getProductByCategory(category: ProductCategory){\r\n    const response = await fetch('getproductscategory?category='+ category.toString());\r\n    const request = await response.json();\r\n    const products = Mapper.mapToProductViews(request)\r\n    this.setState({products: products})\r\n  }\r\n  \r\n  async getCoins(){\r\n    const response = await fetch('getcoins');\r\n    const request = await response.json();\r\n    const coins = Mapper.mapToCoinViews(request)\r\n    this.setState({coins: coins})\r\n  }\r\n  \r\n  openModal = () =>{\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({ showModal: false });\r\n  }\r\n  \r\n  render() {\r\n    const category = [0, 1, 2];\r\n    \r\n    return (\r\n      <div>\r\n        {category.map(cat => \r\n        <button className=\"btn btn-success\" onClick={() => this.getProductByCategory(cat)}>{Language.toProductCategory(cat)}</button>\r\n        )}\r\n        <div className=\"card-columns\">\r\n          {this.state.products.map(product =>\r\n              <div id={product.id.toString()} className=\"card\">\r\n                <h1>{product.name}</h1>\r\n                <p className=\"price\">P{product.price}</p>\r\n                <p>{product.description}</p>\r\n                <p>\r\n                  <button onClick={() => this.getProduct(product.id)}>Купить</button>\r\n                </p>\r\n              </div>\r\n          )}\r\n        </div>\r\n        <ProductMachine \r\n            hide={() => this.closeModal()} \r\n            coins={this.state.coins} \r\n            isShown={this.state.showModal} \r\n            product={this.state.product}\r\n            getProducts={() => this.getProducts()}\r\n            getCoins={() => this.getCoins()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}