{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vopro\\\\RiderProjects\\\\Machine\\\\Machine\\\\ClientApp\\\\src\\\\components\\\\FetchData.tsx\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport \"./NavMenu.css\";\nimport { Mapper } from \"../Mapper/Mapper\";\nimport { ProductCategory } from \"../Enum/ProductCategory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.state = {\n      products: [],\n      showModal: false,\n      product: {\n        id: 0,\n        name: \"\",\n        countProduct: 0,\n        price: 0,\n        description: \"\",\n        category: ProductCategory.food,\n        isRemoved: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  async getProducts() {\n    const response = await fetch('getproducts');\n    const request = await response.json();\n    const products = Mapper.mapToProductViews(request);\n    this.setState({\n      products: products\n    });\n  }\n\n  async getProduct(id) {\n    const response = await fetch('getproducts?id=' + id.toString());\n    const request = await response.json();\n    const products = Mapper.mapToProductViews(request);\n    this.setState({\n      products: products\n    });\n    this.openModal();\n  }\n\n  async getProductByCategory(category) {\n    const response = await fetch('getproducts?id=' + category.toString());\n    const request = await response.json();\n    const products = Mapper.mapToProductViews(request);\n    this.setState({\n      products: products\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-columns\",\n        children: this.state.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: product.id.toString(),\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price\",\n            children: [\"P\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.getProduct(product.id),\n              children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vopro/RiderProjects/Machine/Machine/ClientApp/src/components/FetchData.tsx"],"names":["React","Component","Mapper","ProductCategory","FetchData","constructor","props","openModal","setState","showModal","closeModal","state","products","product","id","name","countProduct","price","description","category","food","isRemoved","componentDidMount","getProducts","response","fetch","request","json","mapToProductViews","getProduct","toString","getProductByCategory","render","map"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,eAAP;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAEA,SAAQC,eAAR,QAA8B,yBAA9B;;AAUA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAgD;AAErDI,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SA4C1BC,SA5C0B,GA4Cd,MAAK;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA9CyB;;AAAA,SAgD1BC,UAhD0B,GAgDb,MAAK;AAChB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAlDyB;;AAGxB,SAAKE,KAAL,GAAY;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVH,MAAAA,SAAS,EAAE,KAFD;AAGVI,MAAAA,OAAO,EAAC;AACNC,QAAAA,EAAE,EAAE,CADE;AAENC,QAAAA,IAAI,EAAE,EAFA;AAGNC,QAAAA,YAAY,EAAE,CAHR;AAINC,QAAAA,KAAK,EAAE,CAJD;AAKNC,QAAAA,WAAW,EAAE,EALP;AAMNC,QAAAA,QAAQ,EAAEhB,eAAe,CAACiB,IANpB;AAONC,QAAAA,SAAS,EAAE;AAPL;AAHE,KAAZ;AAaD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACD;;AAEgB,QAAXA,WAAW,GAAE;AACjB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,UAAMf,QAAQ,GAAGV,MAAM,CAAC0B,iBAAP,CAAyBF,OAAzB,CAAjB;AACA,SAAKlB,QAAL,CAAc;AAACI,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACD;;AAEe,QAAViB,UAAU,CAACf,EAAD,EAAY;AAC1B,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAmBX,EAAE,CAACgB,QAAH,EAApB,CAA5B;AACA,UAAMJ,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,UAAMf,QAAQ,GAAGV,MAAM,CAAC0B,iBAAP,CAAyBF,OAAzB,CAAjB;AACA,SAAKlB,QAAL,CAAc;AAACI,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACA,SAAKL,SAAL;AACD;;AAEyB,QAApBwB,oBAAoB,CAACZ,QAAD,EAA2B;AACnD,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAmBN,QAAQ,CAACW,QAAT,EAApB,CAA5B;AACA,UAAMJ,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,UAAMf,QAAQ,GAAGV,MAAM,CAAC0B,iBAAP,CAAyBF,OAAzB,CAAjB;AACA,SAAKlB,QAAL,CAAc;AAACI,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACD;;AAUDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACG,KAAKrB,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwBpB,OAAO,iBAC5B;AAAK,UAAA,EAAE,EAAEA,OAAO,CAACC,EAAR,CAAWgB,QAAX,EAAT;AAAgC,UAAA,SAAS,EAAC,MAA1C;AAAA,kCACE;AAAA,sBAAKjB,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,4BAAuBF,OAAO,CAACI,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKW,UAAL,CAAgBhB,OAAO,CAACC,EAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAvEoD","sourcesContent":["import * as React from 'react';\r\nimport {Component} from 'react';\r\nimport \"./NavMenu.css\"\r\nimport {Mapper} from \"../Mapper/Mapper\";\r\nimport {ProductView} from \"../ViewModel/productView\";\r\nimport {ProductCategory} from \"../Enum/ProductCategory\";\r\n\r\ntype Props ={}\r\n\r\ntype State = {\r\n  products: ProductView[],\r\n  product: ProductView,\r\n  showModal: boolean\r\n}\r\n\r\nexport class FetchData extends Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    \r\n    this.state ={\r\n      products: [],\r\n      showModal: false,\r\n      product:{\r\n        id: 0,\r\n        name: \"\",\r\n        countProduct: 0,\r\n        price: 0,\r\n        description: \"\",\r\n        category: ProductCategory.food,\r\n        isRemoved: false\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  async getProducts(){\r\n    const response = await fetch('getproducts');\r\n    const request = await response.json();\r\n    const products = Mapper.mapToProductViews(request)\r\n    this.setState({products: products})\r\n  }\r\n\r\n  async getProduct(id: number){\r\n    const response = await fetch('getproducts?id='+ id.toString());\r\n    const request = await response.json();\r\n    const products = Mapper.mapToProductViews(request)\r\n    this.setState({products: products})\r\n    this.openModal();\r\n  }\r\n  \r\n  async getProductByCategory(category: ProductCategory){\r\n    const response = await fetch('getproducts?id='+ category.toString());\r\n    const request = await response.json();\r\n    const products = Mapper.mapToProductViews(request)\r\n    this.setState({products: products})\r\n  }\r\n  \r\n  openModal = () =>{\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({ showModal: false });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"card-columns\">\r\n          {this.state.products.map(product =>\r\n              <div id={product.id.toString()} className=\"card\">\r\n                <h1>{product.name}</h1>\r\n                <p className=\"price\">P{product.price}</p>\r\n                <p>{product.description}</p>\r\n                <p>\r\n                  <button onClick={() => this.getProduct(product.id)}>Купить</button>\r\n                </p>\r\n              </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}